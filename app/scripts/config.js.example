
(function() {
    'use strict';

    /**
     * Configuration for imls app
     * @type {Object}
     */
    var config = {
        censusApi: {
            key: 'add your API key here'
        },
        bounds: {
            northEast: {
                lat: 40.137992,
                lng: -74.955763
            },
            southWest: {
                lat: 39.867004,
                lng: -75.280266
            }
        },
        detailZoom: 14,
        cartodb: {
            visId: '08f82c62-7824-48a3-a039-53b303bff0ff',
            account: 'npecosystem',
            tableName: 'impactviewphilly_102617',
            tractsTableName: 'philly_census_tracts_2010',
            demographicVisUrl: 'https://npecosystem.carto.com/api/v2/viz/dfa88f97-3a97-4ac5-838c-337fb912f29e/viz.json',
            demographicVisColumns: 'cartodb_id, median_income, poverty_rate',
            // This object should conform to the config object passed to
            //   cdb.geo.ui.Legend.Category
            // demonstrated here: https://gist.github.com/javisantana/6410678#file-index-html-L54-L61
            // If the categories displayed in Config.cartodb.visId are changed, this legend config
            //   should also be updated
            legend: {
                title: 'Organizations by Type',
                data: [
                    { name: 'Human Services', value: '#5F4690'},
                    { name: 'Education', value: '#1D6996'},
                    { name: 'Arts, Culture and Humanities', value: '#38A6A5'},
                    { name: 'Public, Societal Benefit', value: '#0F8554'},
                    { name: 'Health', value: '#73AF48'},
                    { name: 'Religion Related', value: '#EDAD08'},
                    { name: 'Environment and Animals', value: '#E17C05'},
                    { name: 'International, Foreign Affairs', value: '#CC503E'},
                    { name: 'Unknown, Unclassified', value: '#94346E'},
                    { name: 'Mutual/Membership Benefit', value: '#6F4070'},
                    { name: 'Others', value: '#666666'}
                ]
            }
        },
        // :site: will be replaced with each value of socialSites, set to null if no social data
        // socialColumn: ':site:_url',
        socialColumn: null,
        // The sites to pull factual social media urls from.
        //  these strings should be a subset of the options available here:
        //  http://developer.factual.com/places-crosswalk/#namespaces
        // The cartodb table for this app must then have a socialColumn manually added for
        //  each entry here, with the column name equal to the value used in socialColumn
        socialSites: [],
        typeahead: {
            results: 10
        },
        // Configures various items in the app based on whether we are debugging or not
        debug: true,
        // Configuration for html5 mode
        html5Mode: {
            enabled: false,
            prefix: ''
        }
    };

    angular.module('imls.config', [])
    .constant('Config', config);

})();

